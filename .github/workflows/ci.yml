name: Tests d'Investissement CI/CD

# Quand déclencher le workflow
on:
  push:
    branches: [ main, feature/* ]
  pull_request:
    branches: [ main ]

# Jobs à exécuter
jobs:
  validation:
    name: Validation du code
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: [3.11, 3.12]

    steps:
    # 1. Récupérer le code
    - name: Checkout du code
      uses: actions/checkout@v4

    # 2. Installer Python
    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    # 3. Installer les dépendances
    - name: Installation des dépendances
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
      env:
        SUPABASE_URL: "https://fake-url.supabase.co"
        SUPABASE_KEY: "fake-key-for-tests"

    # 4. Vérification syntaxe et imports
    - name: Vérification syntaxe Python
      run: |
        python -m py_compile app.py price_service.py
        echo "✅ Syntaxe Python validée"

    # 5. Test d'importation des modules (price_service uniquement)
    - name: Vérification imports
      run: |
        python -c "import price_service; print('✅ price_service.py importable')"

  # Job pour vérifier la qualité du code
  quality:
    name: Qualité du code
    runs-on: ubuntu-latest
    needs: validation # Ne s'exécute que si la validation passe

    steps:
    - name: Checkout du code
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.12

    - name: Installation des outils qualité
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort

    - name: Vérification style de code (flake8)
      run: |
        # Vérifier la syntaxe et style
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Vérifier la complexité (optionnel)
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Vérification formatage (black)
      run: |
        black --check --diff .

    - name: Vérification imports (isort)
      run: |
        isort --check-only --diff .

  # Job pour la sécurité (optionnel mais recommandé)
  security:
    name: Analyse sécurité
    runs-on: ubuntu-latest
    needs: validation

    steps:
    - name: Checkout du code
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.12

    - name: Installation de bandit
      run: |
        python -m pip install --upgrade pip
        pip install bandit[toml]

    - name: Analyse sécurité avec bandit
      run: |
        bandit -r . -f json -o bandit-report.json || true
        bandit -r . || true

    - name: Upload du rapport sécurité
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: bandit-security-report
        path: bandit-report.json