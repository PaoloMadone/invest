name: Validation Pull Request

# Déclenché uniquement sur les PRs
on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [ main ]

jobs:
  # Tests obligatoires
  mandatory-tests:
    name: Tests obligatoires
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout du code
      uses: actions/checkout@v4

    - name: Setup Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: 3.12

    - name: Installation des dépendances
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
      env:
        SUPABASE_URL: "https://fake-url.supabase.co"
        SUPABASE_KEY: "fake-key-for-tests"

    - name: Tests critiques - Revenus
      run: |
        python run_tests.py revenus
      env:
        SUPABASE_URL: "https://fake-url.supabase.co"
        SUPABASE_KEY: "fake-key-for-tests"
        
    - name: Tests critiques - Bourse  
      run: |
        python run_tests.py bourse
      env:
        SUPABASE_URL: "https://fake-url.supabase.co"
        SUPABASE_KEY: "fake-key-for-tests"
        
    - name: Tests critiques - Crypto
      run: |
        python run_tests.py crypto
      env:
        SUPABASE_URL: "https://fake-url.supabase.co"
        SUPABASE_KEY: "fake-key-for-tests"

    - name: Tests critiques - Budget
      run: |
        python run_tests.py budget
      env:
        SUPABASE_URL: "https://fake-url.supabase.co"
        SUPABASE_KEY: "fake-key-for-tests"

    - name: Suite complète
      run: |
        python run_tests.py
      env:
        SUPABASE_URL: "https://fake-url.supabase.co"
        SUPABASE_KEY: "fake-key-for-tests"

  # Vérifications de régression
  regression-check:
    name: Détection de régressions
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout du code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Récupérer tout l'historique

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.12

    - name: Installation des dépendances
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
      env:
        SUPABASE_URL: "https://fake-url.supabase.co"
        SUPABASE_KEY: "fake-key-for-tests"

    - name: Tests sur la branche cible (main)
      run: |
        git checkout main
        python run_tests.py > tests_main.log 2>&1 || echo "Tests main executés"
      env:
        SUPABASE_URL: "https://fake-url.supabase.co"
        SUPABASE_KEY: "fake-key-for-tests"
        
    - name: Tests sur la branche PR
      run: |
        git checkout ${{ github.head_ref }}
        python run_tests.py > tests_pr.log 2>&1 || echo "Tests PR executés"
      env:
        SUPABASE_URL: "https://fake-url.supabase.co"
        SUPABASE_KEY: "fake-key-for-tests"
        
    - name: Comparaison des résultats
      run: |
        echo "=== Résultats branche main ==="
        cat tests_main.log || echo "Pas de log main"
        echo "=== Résultats branche PR ==="
        cat tests_pr.log || echo "Pas de log PR"

  # Check des modifications de fichiers critiques
  critical-files-check:
    name: Vérification fichiers critiques
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout du code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Vérifier les modifications de business_logic.py
      run: |
        if git diff --name-only origin/main..HEAD | grep -q "business_logic.py"; then
          echo "⚠️ ATTENTION: Modifications détectées dans business_logic.py"
          echo "Les tests suivants sont OBLIGATOIRES:"
          echo "- Tests de calculs financiers"
          echo "- Tests de validation"
          echo "- Tests de création de données"
          git diff origin/main..HEAD business_logic.py
        else
          echo "✅ Aucune modification dans business_logic.py"
        fi

    - name: Vérifier les modifications de test_app.py
      run: |
        if git diff --name-only origin/main..HEAD | grep -q "test_app.py"; then
          echo "ℹ️ Modifications détectées dans test_app.py"
          echo "Vérification que tous les tests passent encore..."
          git diff origin/main..HEAD test_app.py
        else
          echo "✅ Aucune modification dans test_app.py"
        fi

  # Les résultats sont visibles dans les logs GitHub Actions
  # Pas de commentaire automatique pour éviter les problèmes de permissions