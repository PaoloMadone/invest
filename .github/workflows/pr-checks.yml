name: Validation Pull Request

# D√©clench√© uniquement sur les PRs
on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [ main ]

jobs:
  # Tests obligatoires
  mandatory-tests:
    name: Tests obligatoires
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout du code
      uses: actions/checkout@v4

    - name: Setup Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: 3.12

    - name: Installation des d√©pendances
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Tests critiques - Revenus
      run: |
        python run_tests.py revenus
        
    - name: Tests critiques - Bourse  
      run: |
        python run_tests.py bourse
        
    - name: Tests critiques - Crypto
      run: |
        python run_tests.py crypto

    - name: Tests critiques - Budget
      run: |
        python run_tests.py budget

    - name: Suite compl√®te
      run: |
        python run_tests.py

  # V√©rifications de r√©gression
  regression-check:
    name: D√©tection de r√©gressions
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout du code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0 # R√©cup√©rer tout l'historique

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.12

    - name: Installation des d√©pendances
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Tests sur la branche cible (main)
      run: |
        git checkout main
        python run_tests.py > tests_main.log 2>&1 || echo "Tests main execut√©s"
        
    - name: Tests sur la branche PR
      run: |
        git checkout ${{ github.head_ref }}
        python run_tests.py > tests_pr.log 2>&1 || echo "Tests PR execut√©s"
        
    - name: Comparaison des r√©sultats
      run: |
        echo "=== R√©sultats branche main ==="
        cat tests_main.log || echo "Pas de log main"
        echo "=== R√©sultats branche PR ==="
        cat tests_pr.log || echo "Pas de log PR"

  # Check des modifications de fichiers critiques
  critical-files-check:
    name: V√©rification fichiers critiques
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout du code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: V√©rifier les modifications de business_logic.py
      run: |
        if git diff --name-only origin/main..HEAD | grep -q "business_logic.py"; then
          echo "‚ö†Ô∏è ATTENTION: Modifications d√©tect√©es dans business_logic.py"
          echo "Les tests suivants sont OBLIGATOIRES:"
          echo "- Tests de calculs financiers"
          echo "- Tests de validation"
          echo "- Tests de cr√©ation de donn√©es"
          git diff origin/main..HEAD business_logic.py
        else
          echo "‚úÖ Aucune modification dans business_logic.py"
        fi

    - name: V√©rifier les modifications de test_app.py
      run: |
        if git diff --name-only origin/main..HEAD | grep -q "test_app.py"; then
          echo "‚ÑπÔ∏è Modifications d√©tect√©es dans test_app.py"
          echo "V√©rification que tous les tests passent encore..."
          git diff origin/main..HEAD test_app.py
        else
          echo "‚úÖ Aucune modification dans test_app.py"
        fi

  # Commentaire automatique sur la PR
  pr-comment:
    name: Commentaire automatique
    runs-on: ubuntu-latest
    needs: [mandatory-tests, regression-check]
    if: always()
    
    steps:
    - name: Commentaire de succ√®s
      if: needs.mandatory-tests.result == 'success' && needs.regression-check.result == 'success'
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: '‚úÖ **Tous les tests passent !** Cette PR peut √™tre merg√©e en s√©curit√©.\n\nüìä **R√©sultats:**\n- Tests revenus: ‚úÖ\n- Tests bourse: ‚úÖ\n- Tests crypto: ‚úÖ\n- Tests budget: ‚úÖ\n- Pas de r√©gression d√©tect√©e: ‚úÖ'
          })

    - name: Commentaire d'√©chec
      if: needs.mandatory-tests.result == 'failure' || needs.regression-check.result == 'failure'
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: '‚ùå **√âchec des tests !** Cette PR ne peut pas √™tre merg√©e.\n\nüîç **Actions requises:**\n1. V√©rifier les logs des tests qui √©chouent\n2. Corriger les erreurs\n3. Re-pusher pour relancer les tests\n\nüí° **Aide:** Lancez `python run_tests.py` en local pour diagnostiquer.'
          })